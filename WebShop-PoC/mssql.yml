apiVersion: v1
kind: PersistentVolume
metadata:
  name: mssql-poc
  namespace: poc
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  nfs:
    path: /kubernetes/mssql-poc
    server: 172.21.21.201
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mssql-poc
  namespace: poc
spec:
  resources:
    requests:
      storage: 2Gi
  accessModes:
    - ReadWriteOnce
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: mssql-poc
  namespace: poc
  labels:
    app: mssql-poc
spec:
  template:
    metadata:
      labels:
        app: mssql-poc
    spec:
      containers:
      - name: mssql-poc
        image: microsoft/mssql-server-linux:ctp1-4
        resources:
          requests:
            memory: "3.25Gi"
        env:
        - name: ACCEPT_EULA
          value: "Y"
        - name: MSSQL_DATABASE
          value: "TESTDB"
        - name: SA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mssql-poc-credentials
              key: sa_password
        - name: MSSQL_USER
          valueFrom:
            secretKeyRef:
              name: mssql-poc-credentials
              key: user
        - name: MSSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mssql-poc-credentials
              key: user_password
        ports:
        - containerPort: 1433
        volumeMounts:
        - name: mssql-poc
          mountPath: "/var/opt/mssql/data"
      volumes:
      - name: mssql-poc
        persistentVolumeClaim:
          claimName: mssql-poc
---
apiVersion: v1
kind: Service
metadata:
  name: mssql-poc
  namespace: poc
  labels:
    app: mssql-poc
spec:
  selector:
    app: mssql-poc
  ports:
  - port: 1433
    targetPort: 1433